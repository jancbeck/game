name: CI - Linting, Type Checking, and Testing

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  lint:
    name: GDScript Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install gdtoolkit
        run: |
          pip install gdtoolkit==4.2.2

      - name: Run gdlint
        run: |
          gdlint scripts/*.gd

  validate-build:
    name: Validate Godot Project Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Godot
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_linux.x86_64.zip
          unzip -q Godot_v4.2.2-stable_linux.x86_64.zip
          chmod +x Godot_v4.2.2-stable_linux.x86_64
          mv Godot_v4.2.2-stable_linux.x86_64 /usr/local/bin/godot

      - name: Validate project
        run: |
          godot --headless --path . --check-only --quit
          echo "✓ Project validation passed"

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, validate-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Godot
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_linux.x86_64.zip
          unzip -q Godot_v4.2.2-stable_linux.x86_64.zip
          chmod +x Godot_v4.2.2-stable_linux.x86_64
          mv Godot_v4.2.2-stable_linux.x86_64 /usr/local/bin/godot

      - name: Run unit tests
        run: |
          godot --headless --path . --script addons/gut/gut_cmdln.gd -gdir=res://tests/unit -gexit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: tests/gut_log.txt
          if-no-files-found: ignore

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint, validate-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Godot
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_linux.x86_64.zip
          unzip -q Godot_v4.2.2-stable_linux.x86_64.zip
          chmod +x Godot_v4.2.2-stable_linux.x86_64
          mv Godot_v4.2.2-stable_linux.x86_64 /usr/local/bin/godot

      - name: Run integration tests
        run: |
          godot --headless --path . --script addons/gut/gut_cmdln.gd -gdir=res://tests/integration -gexit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: tests/gut_log.txt
          if-no-files-found: ignore

  test-e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [lint, validate-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Godot
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_linux.x86_64.zip
          unzip -q Godot_v4.2.2-stable_linux.x86_64.zip
          chmod +x Godot_v4.2.2-stable_linux.x86_64
          mv Godot_v4.2.2-stable_linux.x86_64 /usr/local/bin/godot

      - name: Run E2E tests
        run: |
          godot --headless --path . --script addons/gut/gut_cmdln.gd -gdir=res://tests/e2e -gexit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: tests/gut_log.txt
          if-no-files-found: ignore

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration, test-e2e]
    if: always()
    steps:
      - name: Check results
        run: |
          echo "CI Pipeline Complete"
          echo "===================="
          echo "✓ Linting: Passed"
          echo "✓ Build Validation: Passed"
          echo "✓ Unit Tests: Check job status"
          echo "✓ Integration Tests: Check job status"
          echo "✓ E2E Tests: Check job status"
